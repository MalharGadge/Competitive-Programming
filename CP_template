#include <bits/stdc++.h> 
using namespace std;

using ll = long long;

const ll mod = 1e9 + 7;
ll expo(ll a, ll b, ll mod) {ll res = 1; while (b > 0)
{if (b & 1)res = (res * a) % mod; a = (a * a) % mod; b = b >> 1;} return res;}
ll modinv(ll a, ll b) {return expo(a, b - 2, b);}
ll modadd(ll a,ll b,ll mod){a+=(a<0 ? mod:0);b+=(b<0 ? mod:0);a += b;if(a>=mod)a-=mod;return a;} 
ll modsub(ll a,ll b,ll mod){return modadd(a, -b, mod);}
ll modmul(ll a, ll b, ll m) { return ( a % m * b % m) % m;}
ll moddiv(ll a, ll b, ll m) { return modmul(a, modinv(b, m), m) % m ;}
template<typename A> void chmin(A& l, const A& r){ if(r < l) l = r; }
template<typename A> void chmax(A& l, const A& r){ if(l < r) l = r; }
void add_self(ll &f, ll s){f = modadd(f, s, mod);}

#include<ext/pb_ds/assoc_container.hpp>
#include<ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;
typedef tree<ll, null_type, less<ll>, rb_tree_tag, tree_order_statistics_node_update> pbds;
//*A.find_by_order(i)    to find the element at index i(0 indexing)
// A.order_of_key(x)     to find no. of elements with values strictly less than x
// *A.lower_bound(x)     Lower Bound of x = first element >= x in the set
// *A.upper_bound(x)     Upper Bound of x = first element > x in the set


void solve(){

  
}

int main(){
   ios_base::sync_with_stdio(0);
   cin.tie(0);

   int T = 1;
   cin >> T;
   while(T--) solve(); return 0;
}
